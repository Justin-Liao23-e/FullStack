{"ast":null,"code":"// The base URL for the Django backend\nconst BASE_URL = \"http://127.0.0.1:8000/api\";\n\n/*\n  request():\n   - endpoint: string (e.g. \"/register/\")\n   - method: HTTP method (\"GET\", \"POST\", \"PUT\", \"DELETE\")\n   - body: data to send in JSON form\n   - returns: processed response with json data and success status\n*/\nconst request = async (endpoint, method = \"GET\", body = null) => {\n  try {\n    const options = {\n      method: method,\n      credentials: \"include\",\n      // Send cookies for session-based auth\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    if (body) {\n      options.body = JSON.stringify(body);\n    }\n\n    // Make the fetch call to Django\n    const response = await fetch(`${BASE_URL}${endpoint}`, options);\n\n    // Parse JSON response if possible\n    let data;\n    try {\n      data = await response.json();\n    } catch (e) {\n      data = null;\n    }\n    return {\n      ok: response.ok,\n      status: response.status,\n      data,\n      response\n    };\n  } catch (error) {\n    console.error(\"API request failed:\", error);\n    return {\n      ok: false,\n      status: 0,\n      data: null,\n      error: error.message\n    };\n  }\n};\n\n// Helper functions for auth\nexport const register = userData => {\n  return request(\"/register/\", \"POST\", userData);\n};\nexport const login = credentials => {\n  return request(\"/login/\", \"POST\", credentials);\n};\nexport default request;","map":{"version":3,"names":["BASE_URL","request","endpoint","method","body","options","credentials","headers","JSON","stringify","response","fetch","data","json","e","ok","status","error","console","message","register","userData","login"],"sources":["/Users/justin-liao/CS Projects/FullStack/frontend/src/services/api.js"],"sourcesContent":["// The base URL for the Django backend\nconst BASE_URL = \"http://127.0.0.1:8000/api\";\n\n/*\n  request():\n   - endpoint: string (e.g. \"/register/\")\n   - method: HTTP method (\"GET\", \"POST\", \"PUT\", \"DELETE\")\n   - body: data to send in JSON form\n   - returns: processed response with json data and success status\n*/\nconst request = async (endpoint, method = \"GET\", body = null) => {\n  try {\n    const options = {\n      method: method,\n      credentials: \"include\", // Send cookies for session-based auth\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    if (body) {\n      options.body = JSON.stringify(body);\n    }\n\n    // Make the fetch call to Django\n    const response = await fetch(`${BASE_URL}${endpoint}`, options);\n    \n    // Parse JSON response if possible\n    let data;\n    try {\n      data = await response.json();\n    } catch (e) {\n      data = null;\n    }\n    \n    return {\n      ok: response.ok,\n      status: response.status,\n      data,\n      response\n    };\n  } catch (error) {\n    console.error(\"API request failed:\", error);\n    return {\n      ok: false,\n      status: 0,\n      data: null,\n      error: error.message\n    };\n  }\n};\n\n// Helper functions for auth\nexport const register = (userData) => {\n  return request(\"/register/\", \"POST\", userData);\n};\n\nexport const login = (credentials) => {\n  return request(\"/login/\", \"POST\", credentials);\n};\n\nexport default request;"],"mappings":"AAAA;AACA,MAAMA,QAAQ,GAAG,2BAA2B;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,OAAO,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,MAAM,GAAG,KAAK,EAAEC,IAAI,GAAG,IAAI,KAAK;EAC/D,IAAI;IACF,MAAMC,OAAO,GAAG;MACdF,MAAM,EAAEA,MAAM;MACdG,WAAW,EAAE,SAAS;MAAE;MACxBC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC;IACD,IAAIH,IAAI,EAAE;MACRC,OAAO,CAACD,IAAI,GAAGI,IAAI,CAACC,SAAS,CAACL,IAAI,CAAC;IACrC;;IAEA;IACA,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGX,QAAQ,GAAGE,QAAQ,EAAE,EAAEG,OAAO,CAAC;;IAE/D;IACA,IAAIO,IAAI;IACR,IAAI;MACFA,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAC9B,CAAC,CAAC,OAAOC,CAAC,EAAE;MACVF,IAAI,GAAG,IAAI;IACb;IAEA,OAAO;MACLG,EAAE,EAAEL,QAAQ,CAACK,EAAE;MACfC,MAAM,EAAEN,QAAQ,CAACM,MAAM;MACvBJ,IAAI;MACJF;IACF,CAAC;EACH,CAAC,CAAC,OAAOO,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC3C,OAAO;MACLF,EAAE,EAAE,KAAK;MACTC,MAAM,EAAE,CAAC;MACTJ,IAAI,EAAE,IAAI;MACVK,KAAK,EAAEA,KAAK,CAACE;IACf,CAAC;EACH;AACF,CAAC;;AAED;AACA,OAAO,MAAMC,QAAQ,GAAIC,QAAQ,IAAK;EACpC,OAAOpB,OAAO,CAAC,YAAY,EAAE,MAAM,EAAEoB,QAAQ,CAAC;AAChD,CAAC;AAED,OAAO,MAAMC,KAAK,GAAIhB,WAAW,IAAK;EACpC,OAAOL,OAAO,CAAC,SAAS,EAAE,MAAM,EAAEK,WAAW,CAAC;AAChD,CAAC;AAED,eAAeL,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}