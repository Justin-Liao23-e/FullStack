{"ast":null,"code":"// The base URL for the Django backend\nconst BASE_URL = \"http://127.0.0.1:8000/api\";\n\n/*\n  request():\n   - endpoint: string (e.g. \"/register/\")\n   - method: HTTP method (\"GET\", \"POST\", \"PUT\", \"DELETE\")\n   - body: data to send in JSON form\n   - returns: the raw fetch() response object\n*/\nconst request = async (endpoint, method = \"GET\", body = null) => {\n  const options = {\n    method: method,\n    credentials: \"include\",\n    // Send cookies for session-based auth\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Accept\": \"application/json\"\n    },\n    mode: \"cors\" // Enable CORS\n  };\n  if (body) {\n    options.body = JSON.stringify(body);\n  }\n  console.log(`Making ${method} request to ${BASE_URL}${endpoint}`);\n  if (body) {\n    console.log('Request body:', body);\n  }\n  try {\n    // Make the fetch call to Django\n    const response = await fetch(`${BASE_URL}${endpoint}`, options);\n    console.log(`Response status: ${response.status}`);\n    return response;\n  } catch (error) {\n    console.error('Network error:', error);\n    throw error;\n  }\n};\nexport default request;","map":{"version":3,"names":["BASE_URL","request","endpoint","method","body","options","credentials","headers","mode","JSON","stringify","console","log","response","fetch","status","error"],"sources":["/Users/justin-liao/CS Projects/FullStack/frontend/src/services/api.js"],"sourcesContent":["// The base URL for the Django backend\nconst BASE_URL = \"http://127.0.0.1:8000/api\";\n\n/*\n  request():\n   - endpoint: string (e.g. \"/register/\")\n   - method: HTTP method (\"GET\", \"POST\", \"PUT\", \"DELETE\")\n   - body: data to send in JSON form\n   - returns: the raw fetch() response object\n*/\nconst request = async (endpoint, method = \"GET\", body = null) => {\n  const options = {\n    method: method,\n    credentials: \"include\", // Send cookies for session-based auth\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Accept\": \"application/json\",\n    },\n    mode: \"cors\", // Enable CORS\n  };\n  if (body) {\n    options.body = JSON.stringify(body);\n  }\n\n  console.log(`Making ${method} request to ${BASE_URL}${endpoint}`);\n  if (body) {\n    console.log('Request body:', body);\n  }\n\n  try {\n    // Make the fetch call to Django\n    const response = await fetch(`${BASE_URL}${endpoint}`, options);\n    console.log(`Response status: ${response.status}`);\n    return response;\n  } catch (error) {\n    console.error('Network error:', error);\n    throw error;\n  }\n};\n\nexport default request;"],"mappings":"AAAA;AACA,MAAMA,QAAQ,GAAG,2BAA2B;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,OAAO,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,MAAM,GAAG,KAAK,EAAEC,IAAI,GAAG,IAAI,KAAK;EAC/D,MAAMC,OAAO,GAAG;IACdF,MAAM,EAAEA,MAAM;IACdG,WAAW,EAAE,SAAS;IAAE;IACxBC,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB;MAClC,QAAQ,EAAE;IACZ,CAAC;IACDC,IAAI,EAAE,MAAM,CAAE;EAChB,CAAC;EACD,IAAIJ,IAAI,EAAE;IACRC,OAAO,CAACD,IAAI,GAAGK,IAAI,CAACC,SAAS,CAACN,IAAI,CAAC;EACrC;EAEAO,OAAO,CAACC,GAAG,CAAC,UAAUT,MAAM,eAAeH,QAAQ,GAAGE,QAAQ,EAAE,CAAC;EACjE,IAAIE,IAAI,EAAE;IACRO,OAAO,CAACC,GAAG,CAAC,eAAe,EAAER,IAAI,CAAC;EACpC;EAEA,IAAI;IACF;IACA,MAAMS,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGd,QAAQ,GAAGE,QAAQ,EAAE,EAAEG,OAAO,CAAC;IAC/DM,OAAO,CAACC,GAAG,CAAC,oBAAoBC,QAAQ,CAACE,MAAM,EAAE,CAAC;IAClD,OAAOF,QAAQ;EACjB,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdL,OAAO,CAACK,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;IACtC,MAAMA,KAAK;EACb;AACF,CAAC;AAED,eAAef,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}