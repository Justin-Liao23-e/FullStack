{"ast":null,"code":"var _jsxFileName = \"/Users/justin-liao/CS Projects/FullStack/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Routes, Route, Navigate } from 'react-router-dom';\nimport Navbar from './components/Navbar';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport Home from './components/Home';\nimport AdminPanel from './components/AdminPanel';\nimport './App.css';\n\n/*\n  App component:\n   - Holds global states: isLoggedIn, isAdmin\n   - Defines routes for the application\n   - Renders the Navbar at the top\n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Track if a user is logged in, and if they are admin\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      isLoggedIn: isLoggedIn,\n      isAdmin: isAdmin,\n      setIsLoggedIn: setIsLoggedIn,\n      setIsAdmin: setIsAdmin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: isLoggedIn ? /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 33\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 44\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(Login, {\n          setIsLoggedIn: setIsLoggedIn,\n          setIsAdmin: setIsAdmin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/register\",\n        element: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/admin\",\n        element: isLoggedIn && isAdmin ? /*#__PURE__*/_jsxDEV(AdminPanel, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 37\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 54\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"5dptcB5rpn7CakzOsZJrHSfuts8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Routes","Route","Navigate","Navbar","Login","Register","Home","AdminPanel","jsxDEV","_jsxDEV","App","_s","isLoggedIn","setIsLoggedIn","isAdmin","setIsAdmin","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","to","_c","$RefreshReg$"],"sources":["/Users/justin-liao/CS Projects/FullStack/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Routes, Route, Navigate } from 'react-router-dom';\n\nimport Navbar from './components/Navbar';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport Home from './components/Home';\nimport AdminPanel from './components/AdminPanel';\n\nimport './App.css';\n\n/*\n  App component:\n   - Holds global states: isLoggedIn, isAdmin\n   - Defines routes for the application\n   - Renders the Navbar at the top\n*/\nfunction App() {\n  // Track if a user is logged in, and if they are admin\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false);\n\n  return (\n    <div>\n      {/* The Navbar is always visible, passing props to let it handle logout */}\n      <Navbar \n        isLoggedIn={isLoggedIn} \n        isAdmin={isAdmin} \n        setIsLoggedIn={setIsLoggedIn} \n        setIsAdmin={setIsAdmin} \n      />\n\n      {/* Define the routes using react-router-dom */}\n      <Routes>\n        {/* \n          Home route:\n           - If not logged in, redirect to /login\n           - If logged in, show Home component\n        */}\n        <Route \n          path=\"/\" \n          element={isLoggedIn ? <Home /> : <Navigate to=\"/login\" />} \n        />\n\n        {/* Login route */}\n        <Route\n          path=\"/login\"\n          element={\n            <Login\n              setIsLoggedIn={setIsLoggedIn}\n              setIsAdmin={setIsAdmin}\n            />\n          }\n        />\n\n        {/* Registration route */}\n        <Route\n          path=\"/register\"\n          element={<Register />}\n        />\n\n        {/* Admin route:\n            Only accessible if user is logged in AND isAdmin is true,\n            otherwise redirect to Home (/).\n        */}\n        <Route\n          path=\"/admin\"\n          element={\n            isLoggedIn && isAdmin ? <AdminPanel /> : <Navigate to=\"/\" />\n          }\n        />\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,EAAEC,KAAK,EAAEC,QAAQ,QAAQ,kBAAkB;AAE1D,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,UAAU,MAAM,yBAAyB;AAEhD,OAAO,WAAW;;AAElB;AACA;AACA;AACA;AACA;AACA;AALA,SAAAC,MAAA,IAAAC,OAAA;AAMA,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAE7C,oBACEU,OAAA;IAAAO,QAAA,gBAEEP,OAAA,CAACN,MAAM;MACLS,UAAU,EAAEA,UAAW;MACvBE,OAAO,EAAEA,OAAQ;MACjBD,aAAa,EAAEA,aAAc;MAC7BE,UAAU,EAAEA;IAAW;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC,eAGFX,OAAA,CAACT,MAAM;MAAAgB,QAAA,gBAMLP,OAAA,CAACR,KAAK;QACJoB,IAAI,EAAC,GAAG;QACRC,OAAO,EAAEV,UAAU,gBAAGH,OAAA,CAACH,IAAI;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,gBAAGX,OAAA,CAACP,QAAQ;UAACqB,EAAE,EAAC;QAAQ;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3D,CAAC,eAGFX,OAAA,CAACR,KAAK;QACJoB,IAAI,EAAC,QAAQ;QACbC,OAAO,eACLb,OAAA,CAACL,KAAK;UACJS,aAAa,EAAEA,aAAc;UAC7BE,UAAU,EAAEA;QAAW;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxB;MACF;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eAGFX,OAAA,CAACR,KAAK;QACJoB,IAAI,EAAC,WAAW;QAChBC,OAAO,eAAEb,OAAA,CAACJ,QAAQ;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvB,CAAC,eAMFX,OAAA,CAACR,KAAK;QACJoB,IAAI,EAAC,QAAQ;QACbC,OAAO,EACLV,UAAU,IAAIE,OAAO,gBAAGL,OAAA,CAACF,UAAU;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,gBAAGX,OAAA,CAACP,QAAQ;UAACqB,EAAE,EAAC;QAAG;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAC5D;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACT,EAAA,CAzDQD,GAAG;AAAAc,EAAA,GAAHd,GAAG;AA2DZ,eAAeA,GAAG;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}