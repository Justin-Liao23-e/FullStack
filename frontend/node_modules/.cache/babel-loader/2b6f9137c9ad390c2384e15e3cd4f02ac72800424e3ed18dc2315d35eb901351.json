{"ast":null,"code":"var _jsxFileName = \"/Users/justin-liao/CS Projects/FullStack/frontend/src/components/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport request from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login({\n  setIsLoggedIn,\n  setIsAdmin\n}) {\n  _s();\n  // State for the form fields\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n\n  // Get CSRF token when component mounts\n  useEffect(() => {\n    const fetchCsrfToken = async () => {\n      try {\n        await request('/csrf-token/');\n      } catch (error) {\n        console.error('Error fetching CSRF token:', error);\n      }\n    };\n    fetchCsrfToken();\n  }, []);\n  const handleLogin = async e => {\n    e.preventDefault();\n    setLoading(true);\n    try {\n      // Send a POST request to /login/ with email + password\n      const response = await request('/login/', 'POST', {\n        email,\n        password\n      });\n      if (response.ok) {\n        const data = await response.json();\n        // If successful, store the login status in state\n        setIsLoggedIn(true);\n        setIsAdmin(data.is_admin);\n        // Navigate to home\n        navigate('/');\n      } else {\n        // If the server responded with an error\n        const errorData = await response.json();\n        alert(errorData.message || 'Login failed');\n      }\n    } catch (error) {\n      console.error('Login error:', error);\n      alert('Something went wrong. Please check your connection and try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        children: loading ? 'Logging in...' : 'Login'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"PN7OGXYHiv2V3wjMUEg2bD16J64=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","request","jsxDEV","_jsxDEV","Login","setIsLoggedIn","setIsAdmin","_s","email","setEmail","password","setPassword","loading","setLoading","navigate","fetchCsrfToken","error","console","handleLogin","e","preventDefault","response","ok","data","json","is_admin","errorData","alert","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","disabled","_c","$RefreshReg$"],"sources":["/Users/justin-liao/CS Projects/FullStack/frontend/src/components/Login.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport request from '../services/api';\n\nfunction Login({ setIsLoggedIn, setIsAdmin }) {\n  // State for the form fields\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n\n  // Get CSRF token when component mounts\n  useEffect(() => {\n    const fetchCsrfToken = async () => {\n      try {\n        await request('/csrf-token/');\n      } catch (error) {\n        console.error('Error fetching CSRF token:', error);\n      }\n    };\n    \n    fetchCsrfToken();\n  }, []);\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    \n    try {\n      // Send a POST request to /login/ with email + password\n      const response = await request('/login/', 'POST', { email, password });\n      \n      if (response.ok) {\n        const data = await response.json();\n        // If successful, store the login status in state\n        setIsLoggedIn(true);\n        setIsAdmin(data.is_admin);\n        // Navigate to home\n        navigate('/');\n      } else {\n        // If the server responded with an error\n        const errorData = await response.json();\n        alert(errorData.message || 'Login failed');\n      }\n    } catch (error) {\n      console.error('Login error:', error);\n      alert('Something went wrong. Please check your connection and try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Login</h1>\n      <form onSubmit={handleLogin}>\n        <div>\n          <label>Email: </label>\n          <input \n            type=\"email\"\n            value={email}\n            onChange={e => setEmail(e.target.value)}\n            required \n          />\n        </div>\n        <div>\n          <label>Password: </label>\n          <input \n            type=\"password\"\n            value={password}\n            onChange={e => setPassword(e.target.value)}\n            required \n          />\n        </div>\n        <button type=\"submit\" disabled={loading}>\n          {loading ? 'Logging in...' : 'Login'}\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}